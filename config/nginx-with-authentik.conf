# =================================================================
# nginx-with-authelia.conf - Nginx configuration with Authentik SSO
# =================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Service upstreams
    upstream api_backend {
        server api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream data_backend {
        server data:9001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream web_backend {
        server web:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream vscode_backend {
        server vscode:8080 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream authelia_backend {
        server authelia-server:9000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Authentik auth configuration
    proxy_cache_path /tmp/authelia_cache levels=1:2 keys_zone=authelia_cache:10m max_size=100m inactive=60m use_temp_path=off;

    # Main website
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Authentik endpoints (no auth required)
        location /outpost.goauthelia.io {
            proxy_pass http://authelia_backend/outpost.goauthelia.io;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
            proxy_set_header Connection "";
            
            # Allow authelia to set cookies
            proxy_pass_request_headers on;
            proxy_set_header Cookie $http_cookie;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Authentik authentication endpoint
        location = /outpost.goauthelia.io/auth/nginx {
            internal;
            proxy_pass http://authelia_backend/outpost.goauthelia.io/auth/nginx;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
            
            # Cache authentication results
            proxy_cache authelia_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_key "$http_authorization$http_cookie";
        }

        # Authentik UI (no auth required for login page)
        location /auth/ {
            proxy_pass http://authelia_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Public assets (no auth required)
        location /static/ {
            proxy_pass http://web_backend/static/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Main web application (auth required)
        location / {
            # Authentik auth check
            auth_request /outpost.goauthelia.io/auth/nginx;
            error_page 401 = @goauthelia_proxy_signin;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            # Pass auth headers from Authentik
            auth_request_set $authelia_username $upstream_http_x_authelia_username;
            auth_request_set $authelia_groups $upstream_http_x_authelia_groups;
            auth_request_set $authelia_email $upstream_http_x_authelia_email;
            auth_request_set $authelia_name $upstream_http_x_authelia_name;
            auth_request_set $authelia_uid $upstream_http_x_authelia_uid;

            proxy_set_header X-authelia-username $authelia_username;
            proxy_set_header X-authelia-groups $authelia_groups;
            proxy_set_header X-authelia-email $authelia_email;
            proxy_set_header X-authelia-name $authelia_name;
            proxy_set_header X-authelia-uid $authelia_uid;

            # Proxy to web backend
            proxy_pass http://web_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # WebSocket support for React hot reload
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # API endpoints (auth required)
        location /api {
            # Authentik auth check
            auth_request /outpost.goauthelia.io/auth/nginx;
            error_page 401 = @goauthelia_proxy_signin;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            # Pass auth headers
            auth_request_set $authelia_username $upstream_http_x_authelia_username;
            auth_request_set $authelia_groups $upstream_http_x_authelia_groups;
            auth_request_set $authelia_email $upstream_http_x_authelia_email;
            auth_request_set $authelia_name $upstream_http_x_authelia_name;
            auth_request_set $authelia_uid $upstream_http_x_authelia_uid;

            proxy_set_header X-authelia-username $authelia_username;
            proxy_set_header X-authelia-groups $authelia_groups;
            proxy_set_header X-authelia-email $authelia_email;
            proxy_set_header X-authelia-name $authelia_name;
            proxy_set_header X-authelia-uid $authelia_uid;

            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
        }

        # Data service endpoints (auth required)
        location /data {
            # Authentik auth check
            auth_request /outpost.goauthelia.io/auth/nginx;
            error_page 401 = @goauthelia_proxy_signin;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            # Rewrite /data to / for the data service
            rewrite ^/data/(.*)$ /$1 break;
            
            proxy_pass http://data_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
        }

        # VS Code server (auth required)
        location /vscode/ {
            # Authentik auth check
            auth_request /outpost.goauthelia.io/auth/nginx;
            error_page 401 = @goauthelia_proxy_signin;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            proxy_pass http://vscode_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # WebSocket support for VS Code
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Increase timeouts for VS Code
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # WebSocket endpoint for real-time features (auth required)
        location /ws {
            # Authentik auth check
            auth_request /outpost.goauthelia.io/auth/nginx;
            error_page 401 = @goauthelia_proxy_signin;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Authentik sign-in redirect
        location @goauthelia_proxy_signin {
            internal;
            add_header Set-Cookie $auth_cookie;
            return 302 /outpost.goauthelia.io/start?rd=$scheme://$http_host$request_uri;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }
    }

    # WebSocket connection upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}
