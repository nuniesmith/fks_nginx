# =================================================================
# subdomain.conf.template - Subdomain-based routing configuration
# =================================================================
# Supports routing to different services based on subdomain

# Service upstreams
upstream api_backend {
    server ${API_HOST}:${API_PORT} max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream data_backend {
    server ${DATA_HOST}:${DATA_PORT} max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream web_backend {
    server ${WEB_HOST}:${WEB_PORT} max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream worker_backend {
    server ${WORKER_HOST}:${WORKER_PORT} max_fails=3 fail_timeout=30s;
    keepalive 8;
}

upstream node_backend {
    server ${NODE_NETWORK_HOST}:${NODE_NETWORK_PORT} max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# Main website (www.fkstrading.xyz or fkstrading.xyz)
server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

    location / {
        proxy_pass http://web_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # WebSocket support for React hot reload
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}

# API subdomain (api.fkstrading.xyz)
server {
    listen 80;
    listen [::]:80;
    server_name api.${DOMAIN_NAME};

    location / {
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # Timeouts
        proxy_connect_timeout ${PROXY_CONNECT_TIMEOUT};
        proxy_send_timeout ${PROXY_SEND_TIMEOUT};
        proxy_read_timeout ${PROXY_READ_TIMEOUT};
    }

    # WebSocket support
    location /ws {
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
}

# Data service subdomain (data.fkstrading.xyz)
server {
    listen 80;
    listen [::]:80;
    server_name data.${DOMAIN_NAME};

    location / {
        proxy_pass http://data_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # CORS headers for data API
        add_header Access-Control-Allow-Origin "${CORS_ORIGIN}" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}

# Worker service subdomain (worker.fkstrading.xyz)
server {
    listen 80;
    listen [::]:80;
    server_name worker.${DOMAIN_NAME};

    location / {
        proxy_pass http://worker_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
    }
}

# Node network subdomain (nodes.fkstrading.xyz)
server {
    listen 80;
    listen [::]:80;
    server_name nodes.${DOMAIN_NAME};

    location / {
        proxy_pass http://node_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # WebSocket support for node network
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600s;
    }
}

# Catch-all for undefined subdomains
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    return 404;
}
