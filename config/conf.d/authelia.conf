## =================================================================
## FKS Trading Systems - Simplified Nginx (no external IdP)
## Replaces prior Authentik-based config. Keeps minimal proxy + safety.
## =================================================================

## Upstreams (match actual Docker service names on fks_net)
upstream api_backend { server fks_api:8000; keepalive 16; }
upstream web_backend { server fks_web:80;  keepalive 16; }
upstream data_backend { server fks_data:4200; keepalive 8; }

map $http_upgrade $connection_upgrade { default upgrade; '' close; }

## Basic rate limits (tunable)
limit_req_zone $binary_remote_addr zone=api_rate:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=web_rate:10m rate=50r/s;

server {
    listen 80;
    server_name localhost fkstrading.xyz;
    client_max_body_size 2G;

    # Security headers (lightweight)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer-when-downgrade always;

    # Health
    location = /health { access_log off; return 200 "nginx:ok\n"; }

    # Static (served by web container build)
    location /static/ {
        proxy_pass http://web_backend/static/;
        proxy_set_header Host $host;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # API passthrough (FastAPI already mounted under /api)
    location /api/ {
        limit_req zone=api_rate burst=40 nodelay;
        proxy_pass http://api_backend$request_uri; # preserve full path
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_read_timeout 300s;
    }

    # Data service (mounted at root internally)
    location /data/ {
        proxy_pass http://data_backend/; # optional; adjust if prefix needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Web app (React / SPA). Let React Router handle 404 -> index.html.
    location / {
        limit_req zone=web_rate burst=120 nodelay;
        proxy_pass http://web_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    access_log /var/log/nginx/fks_access.log;
    error_log  /var/log/nginx/fks_error.log warn;
}

# NOTE: Removed all auth_request / Authelia blocks. Reintroduce auth via
# gateway by inserting auth subrequests or JWT validation directives here
# once the Rust auth service publishes an internal validation endpoint.
