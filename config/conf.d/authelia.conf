# =================================================================
# === FKS Trading Systems - Nginx with Authentik Configuration ====
# =================================================================

# =================================================================
# === WebSocket Connection Upgrade Mapping =======================
# =================================================================
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# =================================================================
# === Rate Limiting Zones ========================================
# =================================================================
limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=web_rate_limit:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=health_rate_limit:10m rate=50r/s;

# =================================================================
# === Upstream Definitions =======================================
# =================================================================
upstream api_backend {
    server api:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream web_backend {
    server web:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream data_backend {
    server data:9001 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# =================================================================
# === Main Application Server (Protected by Authentik) ===========
# =================================================================
server {
    listen 80;
    server_name fkstrading.xyz localhost;
    client_max_body_size 2G;

    # Increase buffer size for large headers
    proxy_buffers 8 16k;
    proxy_buffer_size 32k;

    # Security Headers
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    
    # Use Docker's embedded DNS resolver
    resolver 127.0.0.11 valid=30s;

    # Make sure not to redirect traffic to a port 4443
    port_in_redirect off;

    # -------------------------------
    # Authentik outpost endpoint (must be accessible without auth)
    # -------------------------------
    location /outpost.goauthelia.io {
        proxy_pass http://authelia-server:9000/outpost.goauthelia.io;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        add_header Set-Cookie $auth_cookie;
        auth_request_set $auth_cookie $upstream_http_set_cookie;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }

    # Special location for when the /auth endpoint returns a 401
    location @goauthelia_proxy_signin {
        internal;
        add_header Set-Cookie $auth_cookie;
        return 302 /outpost.goauthelia.io/start?rd=$request_uri;
    }

    # -------------------------------
    # Health Check (no auth required)
    # -------------------------------
    location = /health {
        limit_req zone=health_rate_limit burst=10 nodelay;
        access_log off;
        add_header Content-Type text/plain;
        return 200 "nginx: healthy\n";
    }

    # -------------------------------
    # Main Application (Protected)
    # -------------------------------
    location / {
        # Authentik authentication
        auth_request /outpost.goauthelia.io/auth/nginx;
        error_page 401 = @goauthelia_proxy_signin;
        auth_request_set $auth_cookie $upstream_http_set_cookie;
        add_header Set-Cookie $auth_cookie;

        # Translate headers from the outposts back to the actual upstream
        auth_request_set $authelia_username $upstream_http_x_authelia_username;
        auth_request_set $authelia_groups $upstream_http_x_authelia_groups;
        auth_request_set $authelia_email $upstream_http_x_authelia_email;
        auth_request_set $authelia_name $upstream_http_x_authelia_name;
        auth_request_set $authelia_uid $upstream_http_x_authelia_uid;

        proxy_set_header X-authelia-username $authelia_username;
        proxy_set_header X-authelia-groups $authelia_groups;
        proxy_set_header X-authelia-email $authelia_email;
        proxy_set_header X-authelia-name $authelia_name;
        proxy_set_header X-authelia-uid $authelia_uid;

        # Proxy to web backend
        proxy_pass http://web_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Rate limiting
        limit_req zone=web_rate_limit burst=100 nodelay;
    }

    # -------------------------------
    # API Routes (Protected)
    # -------------------------------
    location /api/ {
        # Authentik authentication
        auth_request /outpost.goauthelia.io/auth/nginx;
        error_page 401 = @goauthelia_proxy_signin;
        auth_request_set $auth_cookie $upstream_http_set_cookie;
        add_header Set-Cookie $auth_cookie;

        # Pass authentication headers
        auth_request_set $authelia_username $upstream_http_x_authelia_username;
        auth_request_set $authelia_groups $upstream_http_x_authelia_groups;
        auth_request_set $authelia_email $upstream_http_x_authelia_email;
        proxy_set_header X-authelia-username $authelia_username;
        proxy_set_header X-authelia-groups $authelia_groups;
        proxy_set_header X-authelia-email $authelia_email;

        # Rate limiting
        limit_req zone=api_rate_limit burst=20 nodelay;
        
        # Proxy to API service
        proxy_pass http://api_backend/;
        rewrite ^/api/(.*) /$1 break;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific timeouts
        proxy_read_timeout 300s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
    }

    # -------------------------------
    # Data Service Routes (Protected)
    # -------------------------------
    location /data/ {
        # Authentik authentication
        auth_request /outpost.goauthelia.io/auth/nginx;
        error_page 401 = @goauthelia_proxy_signin;
        auth_request_set $auth_cookie $upstream_http_set_cookie;
        add_header Set-Cookie $auth_cookie;

        limit_req zone=api_rate_limit burst=10 nodelay;
        
        proxy_pass http://data_backend/;
        rewrite ^/data/(.*) /$1 break;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_read_timeout 300s;
    }

    # -------------------------------
    # Static Assets (no auth for performance)
    # -------------------------------
    location /static/ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        gzip_static on;
        add_header Access-Control-Allow-Origin "*";
    }

    # -------------------------------
    # React Development Hot Reload
    # -------------------------------
    location /sockjs-node {
        proxy_pass http://web_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    
    location /__webpack_hmr {
        proxy_pass http://web_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Logging
    access_log /var/log/nginx/fks_access.log;
    error_log /var/log/nginx/fks_error.log warn;
}

# =================================================================
# === Authentik Admin Access (Direct, no proxy auth) =============
# =================================================================
#server {
#    listen 80;
#    server_name auth.fkstrading.xyz auth.localhost;
#    
#    location / {
#        proxy_pass http://authelia-server:9000;
#        proxy_http_version 1.1;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
#    }
#}
