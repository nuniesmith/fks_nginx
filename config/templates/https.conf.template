# ================================================================
# https.conf.template
# ================================================================
# HTTPS server that wraps the existing HTTP server via proxy_redirect
# Assumes self-signed or Let's Encrypt certs are available under
# /etc/nginx/ssl (self-signed generated by entrypoint when ENABLE_SSL=true)

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${BASE_DOMAIN} *.${BASE_DOMAIN};

    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    include /etc/nginx/conf.d/ssl.conf;

    # Proxy all traffic to the HTTP server block logic
    location / {
        proxy_pass http://127.0.0.1:80;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Health
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Note: HTTP (80) is handled by dev-multi.conf when present.
